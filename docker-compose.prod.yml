version: "3.9"

services:
  # Frontend service for production
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "${FRONTEND_PORT:-80}:80"
    environment:
      - NODE_ENV=production
    networks:
      - app-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # Backend service for production
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "${BACKEND_PORT:-3001}:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - PORT=3001
    networks:
      - app-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${DOMAIN:-localhost}`) && PathPrefix(`/api`)"

networks:
  app-network:
    driver: bridge